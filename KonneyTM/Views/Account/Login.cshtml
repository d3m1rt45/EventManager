@using KonneyTM.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

@Styles.Render("~/AccountStyles")


<section class="LogIn">
    <div class="Container">
        <h2>Log in</h2>
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>Use an existing <u class="Logo ml-1">Konney</u> account</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                <div>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                <div>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div>
                    <div class="checkbox">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe)
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="ButtonOut ml-auto">
                    <input type="submit" value="Enter" class="ButtonIn" />
                </div>
            </div>
            @* Enable this once you have account confirmation enabled for password reset functionality
        <p>
            @Html.ActionLink("Forgot your password?", "ForgotPassword")
        </p>*@
        }
    </div>
</section>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }