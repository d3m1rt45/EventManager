@model KonneyTM.ViewModels.EventViewModel
@{
    ViewBag.Title = Model.Title;
}
@Styles.Render("~/PanelStyles")

    <section class="Panel-Events">

        <div class="Header">
            <h2>Event Details</h2>
        </div><!--/.Header-->

        <article class="EventsContainer container-fluid">
            <div class="row text-center">
                <div class="col-6">
                    <h2>Event</h2>
                    <div class="EventDetailsCard" style="background-image:url(/Images/Events/@Model.ImagePath)">
                        <div class="overlay text-center d-flex justify-content-center align-items-center">
                            <div class="Align w-100">
                                <h4 class="mr-0">
                                    <a class="EditTitleButton" data-toggle="modal" data-target="#EditTitleModal">
                                        <i class="Edit fas fa-edit mr-1"></i>
                                    </a><!--/.EditTitleButton-->
                                    @Model.Title
                                </h4><!--Title-->
                                <span>

                                </span><br /><br />
                                <h4 class="mr-2">
                                    <a class="EditDateButton" data-toggle="modal" data-target="#EditDateModal">
                                        <i class="Edit fas fa-edit mr-1"></i>
                                    </a><!--/.EditDateButton-->
                                    Date:
                                </h4>
                                <span>
                                    @Model.Date.ToLongDateString()

                                </span> <br /><br />

                                <h4 class="mr-2">
                                    <a class="EditTimeButton" data-toggle="modal" data-target="#EditTimeModal">
                                        <i class="Edit fas fa-edit mr-1"></i>
                                    </a><!--/.EditTitleButton-->
                                    Time:
                                </h4>
                                <span>
                                    @Model.Time.ToShortTimeString()
                                </span>
                            </div><!--/.Align-->
                        </div><!--/.overlay-->
                        <a class="ChangeImageButton" data-toggle="modal" data-target="#ChangeImageModal">
                            <i class="ChangeImage fas fa-image mr-1 fa-2x"></i>
                        </a><!--/.EditTitleButton-->
                    </div><!--/.EventCard-->
                </div>
                <div class="col-6">
                    <h2>Venue</h2>
                    <div class="EventVenueCard" style="background-image: url(/Images/Venues/@Model.Place.ImagePath)">
                        <div class="overlay text-center d-flex justify-content-center align-items-center">
                            <div class="Align">
                                <h4 class="VenueName d-block">@Model.Place.Name</h4>
                                <h5 class="VenuePhone lead d-block">@Model.Place.PhoneNumber</h5>
                                <h5 class="VenueAddress lead d-block">@Model.Place.Address</h5>
                                <h5 class="VenuePostCode lead d-block">@Model.Place.PostCode</h5>
                                <a class="ChangeVenueButton" data-toggle="modal" data-target="#ConfirmModal"
                                   onclick="$('#ConfirmModal .modal-body').html('Change venue for this event?'); $('.modal-title').html('Venue Change');
                                             $('#ConfirmModal .Confirm').attr('href', '@Url.Action("ChangeVenue", "Demo", new { eventID = Model.ID })')">
                                    <i class="ChangeVenue fas fa-exchange-alt fa-2x"></i>
                                </a><!--/.ChangeVenueButton-->
                            </div>
                        </div><!--/.Align-->
                    </div><!--/.VenueCard-->
                </div>
                <h2 class="EventPeopleTitle mb-3 mt-3 col-xl-12">People Attending</h2>
                @foreach (var item in Model.PeopleAttending)
                {
                    <div class="PersonCol col-2">
                        <div class="PersonCard text-center pt-4">
                            <h4 class="PersonName d-block">@item.FirstName</h4>
                            <h4 class="PersonName d-block">@item.LastName</h4>
                            <h5 class="PersonEmail lead d-block">@item.Email</h5>
                            <h5 class="PersonPhone lead d-block">@item.PhoneNumber</h5>

                            <a class="RemoveButton" data-toggle="modal" data-target="#ConfirmModal"
                               onclick="$('#ConfirmModal .modal-body').html('Remove @item.FirstName @item.LastName from this event?'); $('.modal-title').html('Remove Person');
                                         $('#ConfirmModal .Confirm').attr('href', '@Url.Action("RemovePerson", "Demo", new { eventID = Model.ID, personID = item.ID })')">
                                <i class="RemovePerson fas fa-trash-alt fa-2x"></i>
                            </a><!--/.DeleteButton-->
                        </div><!--/.PersonCard-->
                    </div><!--/.PersonCol-->
                }
                @if (Model.PeopleAttending == null || Model.PeopleAttending.Count < Model.PeopleList.Count)
                {
                    <div class="NewPersonColumn col-2 pt-3">
                        <a class="NewPersonLink" href="@Url.Action("AddPerson", "Demo", new { eventID = Model.ID })">
                            <div class="NewPerson">
                                <i class="fas fa-plus fa-4x"></i>
                            </div><!--/.NewPerson-->
                        </a><!--/.NewPersonLink-->
                    </div><!--/.NewPersonColumn-->
                }
            </div><!--/.row-->
        </article><!--/.EventsContainer-->

        <article id="ConfirmModal" class="ConfirmModal modal fade" tabindex="-1" role="dialog" aria-labelledby="Confirmation Modal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100">Confirm</h4>
                    </div><!--/.modal-header-->
                    <p class="modal-body text-center font-weight-bold mb-0"></p>
                    <div class="modal-footer d-flex justify-content-center pt-4">
                        <a class="CloseModal btn btn-danger text-light" data-dismiss="modal">Cancel</a>
                        <a class="Confirm btn">Confirm</a>
                    </div><!--/.modal-footer-->
                </div><!--/.modal-content-->
            </div><!--/.modal-dialog-->
        </article><!--/.ConfirmModal-->

        <article id="EditTitleModal" class="ConfirmModal modal fade" tabindex="-1" role="dialog" aria-labelledby="Edit Modal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100">Edit Event</h4>
                    </div><!--/.modal-header-->

                    @using (Html.BeginForm("EditEvent", "Demo"))
                    {
                        @Html.HiddenFor(m => m.ID, new { value = Model.ID })
                        @Html.HiddenFor(m => m.ImagePath, new { value = Model.ImagePath })
                        @Html.HiddenFor(m => m.PlaceID, new { value = Model.PlaceID })
                        @Html.HiddenFor(m => m.Time, new { value = Model.Time })
                        @Html.HiddenFor(m => m.Date, new { value = Model.Date })

                        for (var i = 0; i < Model.PeopleAttending.Count; i++)
                        {
                            @Html.HiddenFor(m => m.InvitedPeopleIDs[i], new { value = Model.PeopleAttending[i].ID })
                        }

                        <p class="modal-body text-center font-weight-bold mb-0">
                            <div class="Title form-group text-center px-5">
                                <h5>New Name</h5>
                                @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control text-center" } })
                            </div><!--/.Title-->
                        </p>
                        <div class="modal-footer d-flex justify-content-center pt-3 mt-1">
                            <a class="CloseModal btn btn-danger" data-dismiss="modal">Cancel</a>
                            <input type="submit" value="Confirm" class="Confirm btn" />
                        </div><!--/.modal-footer-->
                    }
                </div><!--/.modal-content-->
            </div><!--/.modal-dialog-->
        </article><!--/.EditTitleModal-->

        <article id="EditDateModal" class="ConfirmModal modal fade" tabindex="-1" role="dialog" aria-labelledby="Edit Modal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100">Edit Event</h4>
                    </div><!--/.modal-header-->

                    @using (Html.BeginForm("EditEvent", "Demo"))
                    {
                        @Html.HiddenFor(m => m.ID, new { value = Model.ID })
                        @Html.HiddenFor(m => m.ImagePath, new { value = Model.ImagePath })
                        @Html.HiddenFor(m => m.PlaceID, new { value = Model.PlaceID })
                        @Html.HiddenFor(m => m.Time, new { value = Model.Time })
                        @Html.HiddenFor(m => m.Title, new { value = Model.Title })

                        for (var i = 0; i < Model.PeopleAttending.Count; i++)
                        {
                            @Html.HiddenFor(m => m.InvitedPeopleIDs[i], new { value = Model.PeopleAttending[i].ID })
                        }

                        <p class="modal-body text-center font-weight-bold mb-0">
                            <div class="Title form-group text-center px-5">
                                <h5>New Date</h5>
                                @Html.EditorFor(m => m.Date, new { htmlAttributes = new { @class = "form-control text-center pl-5 ml-2" } })
                            </div><!--/.Title-->
                        </p>
                        <div class="modal-footer d-flex justify-content-center pt-3 mt-1">
                            <a class="CloseModal btn btn-danger" data-dismiss="modal">Cancel</a>
                            <input type="submit" value="Confirm" class="Confirm btn" />
                        </div><!--/.modal-footer-->
                    }
                </div><!--/.modal-content-->
            </div><!--/.modal-dialog-->
        </article><!--/.DeletePersonModal-->

        <article id="EditTimeModal" class="ConfirmModal modal fade" tabindex="-1" role="dialog" aria-labelledby="Edit Modal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100">Edit Event</h4>
                    </div><!--/.modal-header-->

                    @using (Html.BeginForm("EditEvent", "Demo"))
                    {
                        @Html.HiddenFor(m => m.ID, new { value = Model.ID })
                        @Html.HiddenFor(m => m.ImagePath, new { value = Model.ImagePath })
                        @Html.HiddenFor(m => m.PlaceID, new { value = Model.PlaceID })
                        @Html.HiddenFor(m => m.Date, new { value = Model.Date })
                        @Html.HiddenFor(m => m.Title, new { value = Model.Title })

                        for (var i = 0; i < Model.PeopleAttending.Count; i++)
                        {
                            @Html.HiddenFor(m => m.InvitedPeopleIDs[i], new { value = Model.PeopleAttending[i].ID })
                        }

                        <p class="modal-body text-center font-weight-bold pb-2 pt-2">
                            <div class="Title form-group text-center px-5">
                                <h5>New Time</h5>
                                @Html.EditorFor(m => m.Time, new { htmlAttributes = new { @class = "form-control text-center pl-5" } })
                            </div><!--/.Title-->
                        </p>
                        <div class="modal-footer d-flex justify-content-center pt-3 mt-1">
                            <a class="CloseModal btn btn-danger" data-dismiss="modal">Cancel</a>
                            <input type="submit" value="Confirm" class="Confirm btn" />
                        </div><!--/.modal-footer-->
                    }
                </div><!--/.modal-content-->
            </div><!--/.modal-dialog-->
        </article><!--/.DeletePersonModal-->

        <article id="ChangeImageModal" class="ConfirmModal modal fade" tabindex="-1" role="dialog" aria-labelledby="Edit Modal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100">Edit Event</h4>
                    </div><!--/.modal-header-->

                    @using (Html.BeginForm("EditEvent", "Demo", new { enctype = "multipart/form-data"}))
                    {
                        @Html.HiddenFor(m => m.ID, new { value = Model.ID })
                        @Html.HiddenFor(m => m.ImagePath, new { value = Model.ImagePath })
                        @Html.HiddenFor(m => m.PlaceID, new { value = Model.PlaceID })
                        @Html.HiddenFor(m => m.Time, new { value = Model.Time })
                        @Html.HiddenFor(m => m.Date, new { value = Model.Date })
                        @Html.HiddenFor(m => m.Title, new { value = Model.Title })

                        for (var i = 0; i < Model.PeopleAttending.Count; i++)
                        {
                            @Html.HiddenFor(m => m.InvitedPeopleIDs[i], new { value = Model.PeopleAttending[i].ID })
                        }

                        <p class="modal-body text-center font-weight-bold mb-0">
                            <div class="form-group form-group col-md-4 offset-md-4 text-center">
                                <h4>New Image</h4>
                                <input class="pl-4 pr-1" type="file" name="ImageFile" required />
                            </div>
                        </p>

                        <div class="modal-footer d-flex justify-content-center pt-3 mt-1">
                            <a class="CloseModal btn btn-danger" data-dismiss="modal">Cancel</a>
                            <input type="submit" value="Confirm" class="Confirm btn" />
                        </div><!--/.modal-footer-->
                    }
                </div><!--/.modal-content-->
            </div><!--/.modal-dialog-->
        </article><!--/.EditTitleModal-->
    </section>
